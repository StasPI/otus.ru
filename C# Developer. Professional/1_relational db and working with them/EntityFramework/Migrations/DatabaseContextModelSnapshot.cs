// <auto-generated />
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Entities.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Мебель"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Недвижимость"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Техника"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Журналы"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Авто"
                        });
                });

            modelBuilder.Entity("Entities.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Дерево",
                            Name = "Стул",
                            Price = 100m,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Дерево",
                            Name = "Стол",
                            Price = 200m,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Не дерево",
                            Name = "Стол",
                            Price = 300m,
                            SellerId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "обычный",
                            Name = "Гараж",
                            Price = 30000m,
                            SellerId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "красненький",
                            Name = "Субару",
                            Price = 10000m,
                            SellerId = 5
                        });
                });

            modelBuilder.Entity("Entities.Sellers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "111@mail.ru",
                            FirstName = "Иван1",
                            LastName = "Иванов1",
                            MiddleName = "Иванович1",
                            Phone = "1234567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "222@mail.ru",
                            FirstName = "Иван2",
                            LastName = "Иванов2",
                            MiddleName = "Иванович2",
                            Phone = "2234567"
                        },
                        new
                        {
                            Id = 3,
                            Email = "333@mail.ru",
                            FirstName = "Иван3",
                            LastName = "Иванов3",
                            MiddleName = "Иванович3",
                            Phone = "3234567"
                        },
                        new
                        {
                            Id = 4,
                            Email = "444@mail.ru",
                            FirstName = "Иван4",
                            LastName = "Иванов4",
                            MiddleName = "Иванович4",
                            Phone = "4234567"
                        },
                        new
                        {
                            Id = 5,
                            Email = "555@mail.ru",
                            FirstName = "Иван5",
                            LastName = "Иванов5",
                            MiddleName = "Иванович5",
                            Phone = "5234567"
                        });
                });

            modelBuilder.Entity("Entities.Products", b =>
                {
                    b.HasOne("Entities.Categories", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Sellers", "Seller")
                        .WithMany("Product")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Entities.Categories", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Sellers", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
